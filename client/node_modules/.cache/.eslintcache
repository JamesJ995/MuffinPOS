[{"C:\\coding bootcamp\\ToastPOS\\client\\src\\index.js":"1","C:\\coding bootcamp\\ToastPOS\\client\\src\\serviceWorker.js":"2","C:\\coding bootcamp\\ToastPOS\\client\\src\\App.js":"3","C:\\coding bootcamp\\ToastPOS\\client\\src\\pages\\Signup.js":"4","C:\\coding bootcamp\\ToastPOS\\client\\src\\pages\\Home.js":"5","C:\\coding bootcamp\\ToastPOS\\client\\src\\pages\\NoMatch.js":"6","C:\\coding bootcamp\\ToastPOS\\client\\src\\pages\\Detail.js":"7","C:\\coding bootcamp\\ToastPOS\\client\\src\\pages\\OrderHistory.js":"8","C:\\coding bootcamp\\ToastPOS\\client\\src\\pages\\Login.js":"9","C:\\coding bootcamp\\ToastPOS\\client\\src\\pages\\Success.js":"10","C:\\coding bootcamp\\ToastPOS\\client\\src\\utils\\GlobalState.js":"11","C:\\coding bootcamp\\ToastPOS\\client\\src\\components\\Nav\\index.js":"12","C:\\coding bootcamp\\ToastPOS\\client\\src\\utils\\auth.js":"13","C:\\coding bootcamp\\ToastPOS\\client\\src\\utils\\mutations.js":"14","C:\\coding bootcamp\\ToastPOS\\client\\src\\utils\\actions.js":"15","C:\\coding bootcamp\\ToastPOS\\client\\src\\utils\\queries.js":"16","C:\\coding bootcamp\\ToastPOS\\client\\src\\utils\\helpers.js":"17","C:\\coding bootcamp\\ToastPOS\\client\\src\\utils\\reducers.js":"18","C:\\coding bootcamp\\ToastPOS\\client\\src\\components\\ProductList\\index.js":"19","C:\\coding bootcamp\\ToastPOS\\client\\src\\components\\CategoryMenu\\index.js":"20","C:\\coding bootcamp\\ToastPOS\\client\\src\\components\\Cart\\index.js":"21","C:\\coding bootcamp\\ToastPOS\\client\\src\\components\\Jumbotron\\index.js":"22","C:\\coding bootcamp\\ToastPOS\\client\\src\\components\\CartItem\\index.js":"23","C:\\coding bootcamp\\ToastPOS\\client\\src\\components\\ProductItem\\index.js":"24","C:\\coding bootcamp\\ToastPOS\\client\\src\\components\\MainNav\\index.js":"25"},{"size":518,"mtime":1633484292464,"results":"26","hashOfConfig":"27"},{"size":5224,"mtime":1633484292470,"results":"28","hashOfConfig":"27"},{"size":1787,"mtime":1633792399689,"results":"29","hashOfConfig":"27"},{"size":2509,"mtime":1633484292468,"results":"30","hashOfConfig":"27"},{"size":531,"mtime":1633792417333,"results":"31","hashOfConfig":"27"},{"size":390,"mtime":1633484292467,"results":"32","hashOfConfig":"27"},{"size":4070,"mtime":1633792399695,"results":"33","hashOfConfig":"27"},{"size":1808,"mtime":1633792399696,"results":"34","hashOfConfig":"27"},{"size":2973,"mtime":1633792399696,"results":"35","hashOfConfig":"27"},{"size":1296,"mtime":1633792399697,"results":"36","hashOfConfig":"27"},{"size":588,"mtime":1633484292470,"results":"37","hashOfConfig":"27"},{"size":1344,"mtime":1633486818586,"results":"38","hashOfConfig":"27"},{"size":1060,"mtime":1633484292472,"results":"39","hashOfConfig":"27"},{"size":959,"mtime":1633792399698,"results":"40","hashOfConfig":"27"},{"size":479,"mtime":1633792399698,"results":"41","hashOfConfig":"27"},{"size":1031,"mtime":1633792399699,"results":"42","hashOfConfig":"27"},{"size":1444,"mtime":1633484292472,"results":"43","hashOfConfig":"27"},{"size":2967,"mtime":1633792399699,"results":"44","hashOfConfig":"27"},{"size":2380,"mtime":1633792417333,"results":"45","hashOfConfig":"27"},{"size":1727,"mtime":1633792417331,"results":"46","hashOfConfig":"27"},{"size":3814,"mtime":1633792417329,"results":"47","hashOfConfig":"27"},{"size":252,"mtime":1633486818585,"results":"48","hashOfConfig":"27"},{"size":2144,"mtime":1633792417330,"results":"49","hashOfConfig":"27"},{"size":1945,"mtime":1633792417332,"results":"50","hashOfConfig":"27"},{"size":1381,"mtime":1633792399691,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1l25bil",{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\coding bootcamp\\ToastPOS\\client\\src\\index.js",[],"C:\\coding bootcamp\\ToastPOS\\client\\src\\serviceWorker.js",[],"C:\\coding bootcamp\\ToastPOS\\client\\src\\App.js",[],"C:\\coding bootcamp\\ToastPOS\\client\\src\\pages\\Signup.js",[],"C:\\coding bootcamp\\ToastPOS\\client\\src\\pages\\Home.js",["107","108"],"import React from 'react';\r\nimport ProductList from '../components/ProductList';\r\nimport CategoryMenu from '../components/CategoryMenu';\r\nimport Cart from '../components/Cart';\r\nimport Auth from '../utils/auth';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n  if (true || Auth.loggedIn()) {\r\n    return (\r\n      <div>\r\n        {/* <CategoryMenu /> */}\r\n        <ProductList />\r\n        {/* <Cart /> */}\r\n     </div>\r\n    );\r\n  } else {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n};\r\n\r\nexport default Home;","C:\\coding bootcamp\\ToastPOS\\client\\src\\pages\\NoMatch.js",[],"C:\\coding bootcamp\\ToastPOS\\client\\src\\pages\\Detail.js",[],"C:\\coding bootcamp\\ToastPOS\\client\\src\\pages\\OrderHistory.js",[],"C:\\coding bootcamp\\ToastPOS\\client\\src\\pages\\Login.js",["109"],"import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { Link } from 'react-router-dom';\r\nimport { LOGIN } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nfunction Login(props) {\r\n  const [formState, setFormState] = useState({ employeeID: '', password: '' });\r\n  const [login, { error }] = useMutation(LOGIN);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const mutationResponse = await login({\r\n        variables: { employeeID: formState.employeeID, password: formState.password },\r\n      });\r\n      const token = mutationResponse.data.login.token;\r\n      Auth.login(token);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{backgroundColor: \"burlywood\"}}>\r\n    <Container style={{position: \"relative\"}}>\r\n      <Row>\r\n        <Col className=\"col py-5 md-offset-4\" >\r\n          <Card className=\"col-12 col-md-6 mx-auto\" style={{marginTop: \"120px\", marginBottom: \"405px\"}}>\r\n            <Card.Body>\r\n              <h2>🍞Toast Login🍞</h2>\r\n\r\n              <Form onSubmit={handleFormSubmit} className=\"w-100\">\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Employee ID #</Form.Label>\r\n                  <Form.Control\r\n                    type=\"employeeID\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter ID\"\r\n                    name=\"employeeID\"\r\n                    id=\"employeeID\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter Password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    id=\"pwd\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Group>\r\n                {error ? (\r\n                  <div>\r\n                    <p className=\"error-text\">\r\n                      The provided credentials are incorrect\r\n                    </p>\r\n                  </div>\r\n                ) : null}\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Submit\r\n                </Button>{' '}\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\coding bootcamp\\ToastPOS\\client\\src\\pages\\Success.js",[],"C:\\coding bootcamp\\ToastPOS\\client\\src\\utils\\GlobalState.js",[],"C:\\coding bootcamp\\ToastPOS\\client\\src\\components\\Nav\\index.js",[],"C:\\coding bootcamp\\ToastPOS\\client\\src\\utils\\auth.js",[],"C:\\coding bootcamp\\ToastPOS\\client\\src\\utils\\mutations.js",[],"C:\\coding bootcamp\\ToastPOS\\client\\src\\utils\\actions.js",[],"C:\\coding bootcamp\\ToastPOS\\client\\src\\utils\\queries.js",[],"C:\\coding bootcamp\\ToastPOS\\client\\src\\utils\\helpers.js",[],"C:\\coding bootcamp\\ToastPOS\\client\\src\\utils\\reducers.js",[],"C:\\coding bootcamp\\ToastPOS\\client\\src\\components\\ProductList\\index.js",[],"C:\\coding bootcamp\\ToastPOS\\client\\src\\components\\CategoryMenu\\index.js",[],"C:\\coding bootcamp\\ToastPOS\\client\\src\\components\\Cart\\index.js",["110"],"import React, { useEffect } from 'react';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport { QUERY_CHECKOUT } from '../../utils/queries';\r\nimport { idbPromise } from '../../utils/helpers';\r\nimport CartItem from '../CartItem';\r\nimport Auth from '../../utils/auth';\r\nimport { useStoreContext } from '../../utils/GlobalState';\r\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\r\n//import './style.css';\r\n\r\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\r\n\r\nconst Cart = () => {\r\n  const [state, dispatch] = useStoreContext();\r\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      stripePromise.then((res) => {\r\n        res.redirectToCheckout({ sessionId: data.checkout.session });\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    async function getCart() {\r\n      const cart = await idbPromise('cart', 'get');\r\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\r\n    }\r\n\r\n    if (!state.cart.length) {\r\n      getCart();\r\n    }\r\n  }, [state.cart.length, dispatch]);\r\n\r\n  function toggleCart() {\r\n    dispatch({ type: TOGGLE_CART });\r\n  }\r\n\r\n  function calculateTotal() {\r\n    let sum = 0;\r\n    state.cart.forEach((item) => {\r\n      sum += item.price * item.purchaseQuantity;\r\n    });\r\n    return sum.toFixed(2);\r\n  }\r\n\r\n  function submitCheckout() {\r\n    const productIds = [];\r\n\r\n    state.cart.forEach((item) => {\r\n      for (let i = 0; i < item.purchaseQuantity; i++) {\r\n        productIds.push(item._id);\r\n      }\r\n    });\r\n\r\n    getCheckout({\r\n      variables: { products: productIds },\r\n    });\r\n  }\r\nconst style ={\r\n  sidebar :{\r\n    position: \"fixed\",\r\n    top: \"51px\",\r\n    bottom: 0,\r\n    left: 0,\r\n    zIndex: 1000,\r\n    display: \"block\",\r\n    padding: \"20px\",\r\n    overflowX: \"hidden\",\r\n    overflowY: \"auto\",\r\n    borderRight: \"1px solid #eee\",\r\n    width: \"5rem\"\r\n  },\r\n  total :{\r\n    fontSize:\"2rem\",\r\n    textAlign: \"center\",\r\n    color: \"#888888\"\r\n  },\r\n  order: {\r\n    color:\"#333\",\r\n    textAlign: \"center\"\r\n  }\r\n}\r\n  // if (!state.cartOpen) {\r\n  //   return (\r\n  //     <div className=\"cart-closed\" onClick={toggleCart}>\r\n  //       <span role=\"img\" aria-label=\"trash\">\r\n  //         🛒\r\n  //       </span>\r\n  //     </div>\r\n  //   );\r\n  // }\r\n\r\n  return (\r\n\r\n  <div className=\"col-12  px-sm-2 px-0 bg-light d-flex sticky-top min-vh-100\">\r\n    \r\n    <div className=\"d-flex flex-sm-column w-100 align-items-center align-items-sm-start pt-2 text-white\">\r\n       <h2 style={style.order} className=\"text-center\">Your Order Summary</h2>\r\n        {state.cart.length ? (\r\n          <div className=\"w-100\">\r\n          <ul class=\"list-group mb-3\">\r\n          {state.cart.map((item) => (\r\n             \r\n              <CartItem key={item._id} item={item} />\r\n           \r\n          ))}\r\n          </ul>\r\n            <div className=\"p-4 border-top\" style={style.total}>\r\n              \r\n                  <strong>Total: ${calculateTotal()}</strong>\r\n            </div>\r\n        \r\n      \r\n            <div class=\"p-2 w-100 mt-auto align-self-end \">\r\n     \r\n                {Auth.loggedIn() ? (\r\n                  <button className=\"btn-warning btn-lg btn-block w-100 p-4\" onClick={submitCheckout}>Proceed To Payment</button>\r\n                ) : (\r\n                  <div className=\"bg-danger p-4 text-center\"><h2 className=\"text-white\">(log in to check out)</h2></div>\r\n                )}\r\n            </div>\r\n        </div>\r\n         \r\n      ) : (\r\n        <div className=\"toast\">\r\n          \r\n          <h2 style={style.order}>\r\n            You haven't added anything to your cart yet!\r\n          </h2>\r\n        </div>\r\n        \r\n      )}\r\n            </div>\r\n        </div>\r\n\r\n \r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","C:\\coding bootcamp\\ToastPOS\\client\\src\\components\\Jumbotron\\index.js",[],"C:\\coding bootcamp\\ToastPOS\\client\\src\\components\\CartItem\\index.js",["111"],"import React from 'react';\r\nimport { useStoreContext } from \"../../utils/GlobalState\";\r\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\nimport { style } from 'dom-helpers';\r\n\r\nconst CartItem = ({ item }) => {\r\n\r\n  const [, dispatch] = useStoreContext();\r\n\r\n  const removeFromCart = item => {\r\n    dispatch({\r\n      type: REMOVE_FROM_CART,\r\n      _id: item._id\r\n    });\r\n    idbPromise('cart', 'delete', { ...item });\r\n\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const value = e.target.value;\r\n    if (value === '0') {\r\n      dispatch({\r\n        type: REMOVE_FROM_CART,\r\n        _id: item._id\r\n      });\r\n      idbPromise('cart', 'delete', { ...item });\r\n\r\n    } else {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: item._id,\r\n        purchaseQuantity: parseInt(value)\r\n      });\r\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\r\n\r\n    }\r\n  }\r\n  const style ={\r\n   list: {\r\n     fontSize: \"1.2em\",\r\n     textAlign: \"center\"\r\n   },\r\n   name: {\r\n     fontSize: \"1.2em\"\r\n   }\r\n }\r\n  return (\r\n    <div className=\"p-0 m-0\">\r\n       \r\n          <li class=\"list-group-item d-flex justify-content-between py-2\">\r\n            <div className=\"p-2 w-100 \">\r\n              <h6 class=\"my-0\" style={style.name}>{item.name}</h6>\r\n            </div>\r\n            <div class=\"p-2 \">\r\n                <input class= \"col-12 p-2\"\r\n                type=\"number\"\r\n                placeholder=\"01\"\r\n                value={item.purchaseQuantity}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n            <div className=\"p-2\" style={style.list} >Quantity {item.purchaseQuantity}</div>\r\n            <span class=\"text-muted d-none\">$12</span>\r\n            <span class=\" bg-danger p-4 text-white\"\r\n            role=\"img\"\r\n            aria-label=\"trash\"\r\n            onClick={() => removeFromCart(item)}\r\n          >\r\n           X\r\n          </span>\r\n          </li>\r\n       \r\n        \r\n         \r\n        <div>\r\n          \r\n          \r\n        </div>\r\n      </div>\r\n  \r\n  );\r\n}\r\n\r\nexport default CartItem;","C:\\coding bootcamp\\ToastPOS\\client\\src\\components\\ProductItem\\index.js",["112","113","114","115","116"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { pluralize } from '../../utils/helpers';\r\nimport { useStoreContext } from '../../utils/GlobalState';\r\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\r\nimport { idbPromise } from '../../utils/helpers';\r\nimport Card from 'react-bootstrap/Card';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\r\n\r\nfunction ProductItem(item) {\r\n  const [state, dispatch] = useStoreContext();\r\n\r\n  const { image, name, _id, price, quantity } = item;\r\n\r\n  const { cart } = state;\r\n\r\n  const addToCart = () => {\r\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id);\r\n    if (itemInCart) {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: _id,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n      idbPromise('cart', 'put', {\r\n        ...itemInCart,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        product: { ...item, purchaseQuantity: 1 },\r\n      });\r\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\r\n    }\r\n  };\r\n\r\n  return (\r\n\r\n    <Card className=\"col-4 mb-2 border-0\">\r\n      <Link to={`/`}>\r\n        <Card.Img\r\n          onClick={addToCart}\r\n          variant=\"top\"\r\n          className=\"rounded-pill p-2\"\r\n          alt={name}\r\n          src={`/images/${image}`}\r\n        />\r\n\r\n      </Link>\r\n      <Card.Body>\r\n        <Card.Title>{name}</Card.Title>\r\n      </Card.Body>\r\n\r\n      <Card.Body>\r\n        <button\r\n          className=\"btn btn-warning\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            window.location.href = `/products/${_id}`;\r\n          }}\r\n        >\r\n          Details\r\n        </button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ProductItem;\r\n","C:\\coding bootcamp\\ToastPOS\\client\\src\\components\\MainNav\\index.js",[],{"ruleId":"117","severity":1,"message":"118","line":3,"column":8,"nodeType":"119","messageId":"120","endLine":3,"endColumn":20},{"ruleId":"117","severity":1,"message":"121","line":4,"column":8,"nodeType":"119","messageId":"120","endLine":4,"endColumn":12},{"ruleId":"117","severity":1,"message":"122","line":3,"column":10,"nodeType":"119","messageId":"120","endLine":3,"endColumn":14},{"ruleId":"117","severity":1,"message":"123","line":37,"column":12,"nodeType":"119","messageId":"120","endLine":37,"endColumn":22},{"ruleId":"117","severity":1,"message":"124","line":5,"column":10,"nodeType":"119","messageId":"120","endLine":5,"endColumn":15},{"ruleId":"117","severity":1,"message":"125","line":3,"column":10,"nodeType":"119","messageId":"120","endLine":3,"endColumn":19},{"ruleId":"117","severity":1,"message":"126","line":8,"column":8,"nodeType":"119","messageId":"120","endLine":8,"endColumn":17},{"ruleId":"117","severity":1,"message":"127","line":9,"column":8,"nodeType":"119","messageId":"120","endLine":9,"endColumn":21},{"ruleId":"117","severity":1,"message":"128","line":14,"column":29,"nodeType":"119","messageId":"120","endLine":14,"endColumn":34},{"ruleId":"117","severity":1,"message":"129","line":14,"column":36,"nodeType":"119","messageId":"120","endLine":14,"endColumn":44},"no-unused-vars","'CategoryMenu' is defined but never used.","Identifier","unusedVar","'Cart' is defined but never used.","'Link' is defined but never used.","'toggleCart' is defined but never used.","'style' is defined but never used.","'pluralize' is defined but never used.","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'price' is assigned a value but never used.","'quantity' is assigned a value but never used."]